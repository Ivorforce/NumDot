:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/godot/NumDot/doc_classes/NDArray.xml.

.. _class_NDArray:

NDArray
=======

**Inherits:** ``RefCounted``

A NumDot tensor object.

.. rst-class:: classref-introduction-group

Description
-----------

A NumDot tensor object.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`as_type<class_NDArray_method_as_type>`\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const|                                                                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_abs<class_NDArray_method_assign_abs>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_acos<class_NDArray_method_assign_acos>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_acosh<class_NDArray_method_assign_acosh>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_add<class_NDArray_method_assign_add>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_all<class_NDArray_method_assign_all>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_angle<class_NDArray_method_assign_angle>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_any<class_NDArray_method_assign_any>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_asin<class_NDArray_method_assign_asin>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_asinh<class_NDArray_method_assign_asinh>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_atan<class_NDArray_method_assign_atan>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_atan2<class_NDArray_method_assign_atan2>`\ (\ x1\: ``Variant``, x2\: ``Variant``\ )                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_atanh<class_NDArray_method_assign_atanh>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_and<class_NDArray_method_assign_bitwise_and>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_left_shift<class_NDArray_method_assign_bitwise_left_shift>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_not<class_NDArray_method_assign_bitwise_not>`\ (\ a\: ``Variant``\ )                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_or<class_NDArray_method_assign_bitwise_or>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_right_shift<class_NDArray_method_assign_bitwise_right_shift>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_bitwise_xor<class_NDArray_method_assign_bitwise_xor>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_ceil<class_NDArray_method_assign_ceil>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_clip<class_NDArray_method_assign_clip>`\ (\ a\: ``Variant``, min\: ``Variant``, max\: ``Variant``\ )                                                |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_conjugate<class_NDArray_method_assign_conjugate>`\ (\ a\: ``Variant``\ )                                                                            |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_convolve<class_NDArray_method_assign_convolve>`\ (\ array\: ``Variant``, kernel\: ``Variant``\ )                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_cos<class_NDArray_method_assign_cos>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_cosh<class_NDArray_method_assign_cosh>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_cross<class_NDArray_method_assign_cross>`\ (\ a\: ``Variant``, b\: ``Variant``, axisa\: ``int`` = -1, axisb\: ``int`` = -1, axisc\: ``int`` = -1\ ) |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_deg2rad<class_NDArray_method_assign_deg2rad>`\ (\ a\: ``Variant``\ )                                                                                |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_divide<class_NDArray_method_assign_divide>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_dot<class_NDArray_method_assign_dot>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_equal<class_NDArray_method_assign_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_exp<class_NDArray_method_assign_exp>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_floor<class_NDArray_method_assign_floor>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_greater<class_NDArray_method_assign_greater>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_greater_equal<class_NDArray_method_assign_greater_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_less<class_NDArray_method_assign_less>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_less_equal<class_NDArray_method_assign_less_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_log<class_NDArray_method_assign_log>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_logical_and<class_NDArray_method_assign_logical_and>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_logical_not<class_NDArray_method_assign_logical_not>`\ (\ a\: ``Variant``\ )                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_logical_or<class_NDArray_method_assign_logical_or>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_logical_xor<class_NDArray_method_assign_logical_xor>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_matmul<class_NDArray_method_assign_matmul>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_max<class_NDArray_method_assign_max>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_maximum<class_NDArray_method_assign_maximum>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_mean<class_NDArray_method_assign_mean>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_min<class_NDArray_method_assign_min>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_minimum<class_NDArray_method_assign_minimum>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_multiply<class_NDArray_method_assign_multiply>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_negative<class_NDArray_method_assign_negative>`\ (\ a\: ``Variant``\ )                                                                              |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_norm<class_NDArray_method_assign_norm>`\ (\ a\: ``Variant``, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ )                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_not_equal<class_NDArray_method_assign_not_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_positive<class_NDArray_method_assign_positive>`\ (\ a\: ``Variant``\ )                                                                              |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_pow<class_NDArray_method_assign_pow>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_prod<class_NDArray_method_assign_prod>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_rad2deg<class_NDArray_method_assign_rad2deg>`\ (\ a\: ``Variant``\ )                                                                                |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_reduce_dot<class_NDArray_method_assign_reduce_dot>`\ (\ a\: ``Variant``, b\: ``Variant``, axes\: ``Variant`` = null\ )                              |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_remainder<class_NDArray_method_assign_remainder>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_rint<class_NDArray_method_assign_rint>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_round<class_NDArray_method_assign_round>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_sign<class_NDArray_method_assign_sign>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_sin<class_NDArray_method_assign_sin>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_sinh<class_NDArray_method_assign_sinh>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_sqrt<class_NDArray_method_assign_sqrt>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_square<class_NDArray_method_assign_square>`\ (\ a\: ``Variant``\ )                                                                                  |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_std<class_NDArray_method_assign_std>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_subtract<class_NDArray_method_assign_subtract>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_sum<class_NDArray_method_assign_sum>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_tan<class_NDArray_method_assign_tan>`\ (\ a\: ``Variant``\ )                                                                                        |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_tanh<class_NDArray_method_assign_tanh>`\ (\ a\: ``Variant``\ )                                                                                      |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_trunc<class_NDArray_method_assign_trunc>`\ (\ a\: ``Variant``\ )                                                                                    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`assign_var<class_NDArray_method_assign_var>`\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ )                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`buffer_dtype<class_NDArray_method_buffer_dtype>`\ (\ ) |const|                                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`buffer_size<class_NDArray_method_buffer_size>`\ (\ ) |const|                                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`buffer_size_in_bytes<class_NDArray_method_buffer_size_in_bytes>`\ (\ ) |const|                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`copy<class_NDArray_method_copy>`\ (\ ) |const|                                                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`DType<enum_nd_DType>`                                | :ref:`dtype<class_NDArray_method_dtype>`\ (\ ) |const|                                                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`flatten<class_NDArray_method_flatten>`\ (\ ) |const|                                                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`get<class_NDArray_method_get>`\ (\ ...\ ) |const| |vararg|                                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Basis``                                                  | :ref:`get_basis<class_NDArray_method_get_basis>`\ (\ ...\ ) |const| |vararg|                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``                                                   | :ref:`get_bool<class_NDArray_method_get_bool>`\ (\ ...\ ) |const| |vararg|                                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Color``                                                  | :ref:`get_color<class_NDArray_method_get_color>`\ (\ ...\ ) |const| |vararg|                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``float``                                                  | :ref:`get_float<class_NDArray_method_get_float>`\ (\ ...\ ) |const| |vararg|                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`get_int<class_NDArray_method_get_int>`\ (\ ...\ ) |const| |vararg|                                                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Plane``                                                  | :ref:`get_plane<class_NDArray_method_get_plane>`\ (\ ...\ ) |const| |vararg|                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Projection``                                             | :ref:`get_projection<class_NDArray_method_get_projection>`\ (\ ...\ ) |const| |vararg|                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Quaternion``                                             | :ref:`get_quaternion<class_NDArray_method_get_quaternion>`\ (\ ...\ ) |const| |vararg|                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2``                                                | :ref:`get_vector2<class_NDArray_method_get_vector2>`\ (\ ...\ ) |const| |vararg|                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2i``                                               | :ref:`get_vector2i<class_NDArray_method_get_vector2i>`\ (\ ...\ ) |const| |vararg|                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector3``                                                | :ref:`get_vector3<class_NDArray_method_get_vector3>`\ (\ ...\ ) |const| |vararg|                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector3i``                                               | :ref:`get_vector3i<class_NDArray_method_get_vector3i>`\ (\ ...\ ) |const| |vararg|                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector4``                                                | :ref:`get_vector4<class_NDArray_method_get_vector4>`\ (\ ...\ ) |const| |vararg|                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector4i``                                               | :ref:`get_vector4i<class_NDArray_method_get_vector4i>`\ (\ ...\ ) |const| |vararg|                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`ndim<class_NDArray_method_ndim>`\ (\ ) |const|                                                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                     | :ref:`set<class_NDArray_method_set>`\ (\ value\: ``Variant``, ...\ ) |const| |vararg|                                                                            |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``                                       | :ref:`shape<class_NDArray_method_shape>`\ (\ ) |const|                                                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`size<class_NDArray_method_size>`\ (\ ) |const|                                                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``                                       | :ref:`strides<class_NDArray_method_strides>`\ (\ ) |const|                                                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Layout<enum_NDArray_Layout>`                         | :ref:`strides_layout<class_NDArray_method_strides_layout>`\ (\ ) |const|                                                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`strides_offset<class_NDArray_method_strides_offset>`\ (\ ) |const|                                                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Basis``                                                  | :ref:`to_basis<class_NDArray_method_to_basis>`\ (\ ) |const|                                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``                                                   | :ref:`to_bool<class_NDArray_method_to_bool>`\ (\ ) |const|                                                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Color``                                                  | :ref:`to_color<class_NDArray_method_to_color>`\ (\ ) |const|                                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``float``                                                  | :ref:`to_float<class_NDArray_method_to_float>`\ (\ ) |const|                                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`NDArray<class_NDArray>`\] | :ref:`to_godot_array<class_NDArray_method_to_godot_array>`\ (\ ) |const|                                                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                                                    | :ref:`to_int<class_NDArray_method_to_int>`\ (\ ) |const|                                                                                                         |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedByteArray``                                        | :ref:`to_packed_byte_array<class_NDArray_method_to_packed_byte_array>`\ (\ ) |const|                                                                             |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedColorArray``                                       | :ref:`to_packed_color_array<class_NDArray_method_to_packed_color_array>`\ (\ ) |const|                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedFloat32Array``                                     | :ref:`to_packed_float32_array<class_NDArray_method_to_packed_float32_array>`\ (\ ) |const|                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedFloat64Array``                                     | :ref:`to_packed_float64_array<class_NDArray_method_to_packed_float64_array>`\ (\ ) |const|                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt32Array``                                       | :ref:`to_packed_int32_array<class_NDArray_method_to_packed_int32_array>`\ (\ ) |const|                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``                                       | :ref:`to_packed_int64_array<class_NDArray_method_to_packed_int64_array>`\ (\ ) |const|                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedVector2Array``                                     | :ref:`to_packed_vector2_array<class_NDArray_method_to_packed_vector2_array>`\ (\ ) |const|                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedVector3Array``                                     | :ref:`to_packed_vector3_array<class_NDArray_method_to_packed_vector3_array>`\ (\ ) |const|                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedVector4Array``                                     | :ref:`to_packed_vector4_array<class_NDArray_method_to_packed_vector4_array>`\ (\ ) |const|                                                                       |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Plane``                                                  | :ref:`to_plane<class_NDArray_method_to_plane>`\ (\ ) |const|                                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Projection``                                             | :ref:`to_projection<class_NDArray_method_to_projection>`\ (\ ) |const|                                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Quaternion``                                             | :ref:`to_quaternion<class_NDArray_method_to_quaternion>`\ (\ ) |const|                                                                                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2``                                                | :ref:`to_vector2<class_NDArray_method_to_vector2>`\ (\ ) |const|                                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2i``                                               | :ref:`to_vector2i<class_NDArray_method_to_vector2i>`\ (\ ) |const|                                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector3``                                                | :ref:`to_vector3<class_NDArray_method_to_vector3>`\ (\ ) |const|                                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector3i``                                               | :ref:`to_vector3i<class_NDArray_method_to_vector3i>`\ (\ ) |const|                                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector4``                                                | :ref:`to_vector4<class_NDArray_method_to_vector4>`\ (\ ) |const|                                                                                                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector4i``                                               | :ref:`to_vector4i<class_NDArray_method_to_vector4i>`\ (\ ) |const|                                                                                               |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>`                              | :ref:`transpose<class_NDArray_method_transpose>`\ (\ ...\ ) |const| |vararg|                                                                                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_NDArray_Layout:

.. rst-class:: classref-enumeration

enum **Layout**: :ref:`🔗<enum_NDArray_Layout>`

.. _class_NDArray_constant_RowMajor:

.. rst-class:: classref-enumeration-constant

:ref:`Layout<enum_NDArray_Layout>` **RowMajor** = ``0``

The array's strides increase consistently from the inner to the outer dimensions.

.. _class_NDArray_constant_ColumnMajor:

.. rst-class:: classref-enumeration-constant

:ref:`Layout<enum_NDArray_Layout>` **ColumnMajor** = ``1``

The array's strides increase consistently from the outer to the inner dimensions.

.. _class_NDArray_constant_Dynamic:

.. rst-class:: classref-enumeration-constant

:ref:`Layout<enum_NDArray_Layout>` **Dynamic** = ``2``

The array's strides are inconsistent in order.

.. _class_NDArray_constant_Any:

.. rst-class:: classref-enumeration-constant

:ref:`Layout<enum_NDArray_Layout>` **Any** = ``3``

Compatible with both row major and column major, i.e. 0D and 1D arrays.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_NDArray_method_as_type:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **as_type**\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const| :ref:`🔗<class_NDArray_method_as_type>`

Convert to an array of the given type, but avoid copying data if possible.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_abs:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_abs**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_abs>`

In-place version of :ref:`nd.abs<class_nd_method_abs>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_acos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_acos**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_acos>`

In-place version of :ref:`nd.acos<class_nd_method_acos>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_acosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_acosh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_acosh>`

In-place version of :ref:`nd.acosh<class_nd_method_acosh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_add:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_add**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_add>`

In-place version of :ref:`nd.add<class_nd_method_add>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_all:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_all**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_all>`

In-place version of :ref:`nd.all<class_nd_method_all>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_angle:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_angle**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_angle>`

In-place version of :ref:`nd.angle<class_nd_method_angle>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_any:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_any**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_any>`

In-place version of :ref:`nd.any<class_nd_method_any>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_asin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_asin**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_asin>`

In-place version of :ref:`nd.asin<class_nd_method_asin>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_asinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_asinh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_asinh>`

In-place version of :ref:`nd.asinh<class_nd_method_asinh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atan**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atan>`

In-place version of :ref:`nd.atan<class_nd_method_atan>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atan2:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atan2**\ (\ x1\: ``Variant``, x2\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atan2>`

In-place version of :ref:`nd.atan2<class_nd_method_atan2>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atanh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atanh>`

In-place version of :ref:`nd.atanh<class_nd_method_atanh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_and:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_and**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_and>`

In-place version of :ref:`nd.bitwise_and<class_nd_method_bitwise_and>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_left_shift:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_left_shift**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_left_shift>`

In-place version of :ref:`nd.bitwise_left_shift<class_nd_method_bitwise_left_shift>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_not:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_not**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_not>`

In-place version of :ref:`nd.bitwise_not<class_nd_method_bitwise_not>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_or:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_or**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_or>`

In-place version of :ref:`nd.bitwise_or<class_nd_method_bitwise_or>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_right_shift:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_right_shift**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_right_shift>`

In-place version of :ref:`nd.bitwise_right_shift<class_nd_method_bitwise_right_shift>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_bitwise_xor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_bitwise_xor**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_bitwise_xor>`

In-place version of :ref:`nd.bitwise_xor<class_nd_method_bitwise_xor>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_ceil:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_ceil**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_ceil>`

In-place version of :ref:`nd.ceil<class_nd_method_ceil>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_clip:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_clip**\ (\ a\: ``Variant``, min\: ``Variant``, max\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_clip>`

In-place version of :ref:`nd.clip<class_nd_method_clip>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_conjugate:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_conjugate**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_conjugate>`

In-place version of :ref:`nd.conjugate<class_nd_method_conjugate>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_convolve:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_convolve**\ (\ array\: ``Variant``, kernel\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_convolve>`

In-place version of :ref:`nd.convolve<class_nd_method_convolve>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_cos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_cos**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_cos>`

In-place version of :ref:`nd.cos<class_nd_method_cos>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_cosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_cosh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_cosh>`

In-place version of :ref:`nd.cosh<class_nd_method_cosh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_cross:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_cross**\ (\ a\: ``Variant``, b\: ``Variant``, axisa\: ``int`` = -1, axisb\: ``int`` = -1, axisc\: ``int`` = -1\ ) :ref:`🔗<class_NDArray_method_assign_cross>`

In-place version of :ref:`nd.cross<class_nd_method_cross>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_deg2rad:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_deg2rad**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_deg2rad>`

In-place version of :ref:`nd.deg2rad<class_nd_method_deg2rad>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_divide:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_divide**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_divide>`

In-place version of :ref:`nd.divide<class_nd_method_divide>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_dot:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_dot**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_dot>`

In-place version of :ref:`nd.dot<class_nd_method_dot>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_equal>`

In-place version of :ref:`nd.equal<class_nd_method_equal>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_exp:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_exp**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_exp>`

In-place version of :ref:`nd.exp<class_nd_method_exp>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_floor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_floor**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_floor>`

In-place version of :ref:`nd.floor<class_nd_method_floor>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_greater:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_greater**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_greater>`

In-place version of :ref:`nd.greater<class_nd_method_greater>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_greater_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_greater_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_greater_equal>`

In-place version of :ref:`nd.greater_equal<class_nd_method_greater_equal>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_less:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_less**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_less>`

In-place version of :ref:`nd.less<class_nd_method_less>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_less_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_less_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_less_equal>`

In-place version of :ref:`nd.less_equal<class_nd_method_less_equal>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_log:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_log**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_log>`

In-place version of :ref:`nd.log<class_nd_method_log>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_and:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_and**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_and>`

In-place version of :ref:`nd.logical_and<class_nd_method_logical_and>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_not:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_not**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_not>`

In-place version of :ref:`nd.logical_not<class_nd_method_logical_not>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_or:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_or**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_or>`

In-place version of :ref:`nd.logical_or<class_nd_method_logical_or>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_xor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_xor**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_xor>`

In-place version of :ref:`nd.logical_xor<class_nd_method_logical_xor>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_matmul:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_matmul**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_matmul>`

In-place version of :ref:`nd.matmul<class_nd_method_matmul>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_max:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_max**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_max>`

In-place version of :ref:`nd.max<class_nd_method_max>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_maximum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_maximum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_maximum>`

In-place version of :ref:`nd.maximum<class_nd_method_maximum>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_mean:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_mean**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_mean>`

In-place version of :ref:`nd.mean<class_nd_method_mean>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_min:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_min**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_min>`

In-place version of :ref:`nd.min<class_nd_method_min>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_minimum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_minimum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_minimum>`

In-place version of :ref:`nd.minimum<class_nd_method_minimum>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_multiply:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_multiply**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_multiply>`

In-place version of :ref:`nd.multiply<class_nd_method_multiply>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_negative:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_negative**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_negative>`

In-place version of :ref:`nd.negative<class_nd_method_negative>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_norm:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_norm**\ (\ a\: ``Variant``, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_norm>`

In-place version of :ref:`nd.norm<class_nd_method_norm>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_not_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_not_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_not_equal>`

In-place version of :ref:`nd.not_equal<class_nd_method_not_equal>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_positive:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_positive**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_positive>`

In-place version of :ref:`nd.positive<class_nd_method_positive>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_pow:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_pow**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_pow>`

In-place version of :ref:`nd.pow<class_nd_method_pow>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_prod:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_prod**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_prod>`

In-place version of :ref:`nd.prod<class_nd_method_prod>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_rad2deg:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_rad2deg**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_rad2deg>`

In-place version of :ref:`nd.rad2deg<class_nd_method_rad2deg>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_reduce_dot:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_reduce_dot**\ (\ a\: ``Variant``, b\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_reduce_dot>`

In-place version of :ref:`nd.sum_product<class_nd_method_reduce_dot>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_remainder:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_remainder**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_remainder>`

In-place version of :ref:`nd.remainder<class_nd_method_remainder>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_rint:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_rint**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_rint>`

In-place version of :ref:`nd.rint<class_nd_method_rint>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_round:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_round**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_round>`

In-place version of :ref:`nd.round<class_nd_method_round>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sign:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sign**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sign>`

In-place version of :ref:`nd.sign<class_nd_method_sign>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sin**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sin>`

In-place version of :ref:`nd.sin<class_nd_method_sin>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sinh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sinh>`

In-place version of :ref:`nd.sinh<class_nd_method_sinh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sqrt:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sqrt**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sqrt>`

In-place version of :ref:`nd.sqrt<class_nd_method_sqrt>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_square:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_square**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_square>`

In-place version of :ref:`nd.square<class_nd_method_square>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_std:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_std**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_std>`

In-place version of :ref:`nd.std<class_nd_method_std>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_subtract:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_subtract**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_subtract>`

In-place version of :ref:`nd.subtract<class_nd_method_subtract>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sum**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_sum>`

In-place version of :ref:`nd.sum<class_nd_method_sum>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_tan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_tan**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_tan>`

In-place version of :ref:`nd.tan<class_nd_method_tan>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_tanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_tanh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_tanh>`

In-place version of :ref:`nd.tanh<class_nd_method_tanh>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_trunc:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_trunc**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_trunc>`

In-place version of :ref:`nd.trunc<class_nd_method_trunc>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_var:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_var**\ (\ a\: ``Variant``, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_var>`

In-place version of :ref:`nd.var<class_nd_method_var>`.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_buffer_dtype:

.. rst-class:: classref-method

``int`` **buffer_dtype**\ (\ ) |const| :ref:`🔗<class_NDArray_method_buffer_dtype>`

Returns the natural dtype of the underlying buffer.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_buffer_size:

.. rst-class:: classref-method

``int`` **buffer_size**\ (\ ) |const| :ref:`🔗<class_NDArray_method_buffer_size>`

Returns the natural number of elements in the underlying buffer.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_buffer_size_in_bytes:

.. rst-class:: classref-method

``int`` **buffer_size_in_bytes**\ (\ ) |const| :ref:`🔗<class_NDArray_method_buffer_size_in_bytes>`

Returns the number of bytes used by the underlying buffer.

This is equivalent to ``nd.size_of_dtype_in_bytes(x.buffer_dtype()) * x.buffer_size()``.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_copy:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **copy**\ (\ ) |const| :ref:`🔗<class_NDArray_method_copy>`

Creates a copy of this array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_dtype:

.. rst-class:: classref-method

:ref:`DType<enum_nd_DType>` **dtype**\ (\ ) |const| :ref:`🔗<class_NDArray_method_dtype>`

Data-type of the array’s elements.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_flatten:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **flatten**\ (\ ) |const| :ref:`🔗<class_NDArray_method_flatten>`

Return a copy of the array collapsed into one dimension.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **get**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get>`

Indexes into the array, and return the resulting tensor.

If the index is a single boolean array, it is treated as a mask.

If the index is a single integer array, it is treated as an index list.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_basis:

.. rst-class:: classref-method

``Basis`` **get_basis**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_basis>`

Indexes into the array, and return the resulting tensor as a Basis, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_bool:

.. rst-class:: classref-method

``bool`` **get_bool**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_bool>`

Indexes into the array, and return the resulting value as bool.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_color:

.. rst-class:: classref-method

``Color`` **get_color**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_color>`

Indexes into the array, and return the resulting tensor as a Color, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_float:

.. rst-class:: classref-method

``float`` **get_float**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_float>`

Indexes into the array, and return the resulting value as float.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_int:

.. rst-class:: classref-method

``int`` **get_int**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_int>`

Indexes into the array, and return the resulting value as int.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_plane:

.. rst-class:: classref-method

``Plane`` **get_plane**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_plane>`

Indexes into the array, and return the resulting tensor as a Plane, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_projection:

.. rst-class:: classref-method

``Projection`` **get_projection**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_projection>`

Indexes into the array, and return the resulting tensor as a Projection, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_quaternion:

.. rst-class:: classref-method

``Quaternion`` **get_quaternion**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_quaternion>`

Indexes into the array, and return the resulting tensor as a Quaternion, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector2:

.. rst-class:: classref-method

``Vector2`` **get_vector2**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector2>`

Indexes into the array, and return the resulting tensor as a Vector2, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector2i:

.. rst-class:: classref-method

``Vector2i`` **get_vector2i**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector2i>`

Indexes into the array, and return the resulting tensor as a Vector2i, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector3:

.. rst-class:: classref-method

``Vector3`` **get_vector3**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector3>`

Indexes into the array, and return the resulting tensor as a Vector3, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector3i:

.. rst-class:: classref-method

``Vector3i`` **get_vector3i**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector3i>`

Indexes into the array, and return the resulting tensor as a Vector3i, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector4:

.. rst-class:: classref-method

``Vector4`` **get_vector4**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector4>`

Indexes into the array, and return the resulting tensor as a Vector4, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_vector4i:

.. rst-class:: classref-method

``Vector4i`` **get_vector4i**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_vector4i>`

Indexes into the array, and return the resulting tensor as a Vector4i, if the shape is compatible.

See :ref:`get<class_NDArray_method_get>` for documentation of slicing.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_ndim:

.. rst-class:: classref-method

``int`` **ndim**\ (\ ) |const| :ref:`🔗<class_NDArray_method_ndim>`

Number of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_set:

.. rst-class:: classref-method

|void| **set**\ (\ value\: ``Variant``, ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_set>`

Indexes into the array, sets the element to the given value.

The first value is the value to be set, all following values are indexes into the array.

If the index is a single boolean array, it is treated as a mask.

If the index is a single integer array, it is treated as an index list.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_shape:

.. rst-class:: classref-method

``PackedInt64Array`` **shape**\ (\ ) |const| :ref:`🔗<class_NDArray_method_shape>`

Array of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_size:

.. rst-class:: classref-method

``int`` **size**\ (\ ) |const| :ref:`🔗<class_NDArray_method_size>`

Number of elements in the array. Equal to nd.prod(a.shape()), i.e., the product of the array’s dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_strides:

.. rst-class:: classref-method

``PackedInt64Array`` **strides**\ (\ ) |const| :ref:`🔗<class_NDArray_method_strides>`

The strides of each dimension, in order, in the underlying data buffer.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_strides_layout:

.. rst-class:: classref-method

:ref:`Layout<enum_NDArray_Layout>` **strides_layout**\ (\ ) |const| :ref:`🔗<class_NDArray_method_strides_layout>`

The layout of the strides into the underlying data buffer.

Arrays with RowMajor and ColumnMajor layout may have improved performance to those with dynamic layout.

All arrays start with RowMajor layout, but rearranging (like :ref:`nd.transpose<class_nd_method_transpose>`) can change the layout. To regain a consistent layout, consider making a copy of the array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_strides_offset:

.. rst-class:: classref-method

``int`` **strides_offset**\ (\ ) |const| :ref:`🔗<class_NDArray_method_strides_offset>`

The offset of the first element in this array in the underlying data buffer.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_basis:

.. rst-class:: classref-method

``Basis`` **to_basis**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_basis>`

If shape is \[3, 3\], converts this tensor to a Basis.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_bool:

.. rst-class:: classref-method

``bool`` **to_bool**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_bool>`

Convert this tensor to a single bool.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_color:

.. rst-class:: classref-method

``Color`` **to_color**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_color>`

If shape is \[4\], converts this tensor to a Color.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_float:

.. rst-class:: classref-method

``float`` **to_float**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_float>`

Convert this tensor to a single float.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_godot_array:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[:ref:`NDArray<class_NDArray>`\] **to_godot_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_godot_array>`

Convert this tensor to a Godot array. For now, the resulting array is flat.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_int:

.. rst-class:: classref-method

``int`` **to_int**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_int>`

Convert this tensor to a single int.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_byte_array:

.. rst-class:: classref-method

``PackedByteArray`` **to_packed_byte_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_byte_array>`

If 1D, converts this tensor to a PackedByteArray.

If the backing array is PackedByteArray, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_color_array:

.. rst-class:: classref-method

``PackedColorArray`` **to_packed_color_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_color_array>`

If shape is \[?, 4\], converts this tensor to a PackedColorArray.

If the backing array is PackedColorArray, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float32_array:

.. rst-class:: classref-method

``PackedFloat32Array`` **to_packed_float32_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_float32_array>`

If 1D, converts this tensor to a PackedFloat32Array.

If the backing array is PackedFloat32Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float64_array:

.. rst-class:: classref-method

``PackedFloat64Array`` **to_packed_float64_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_float64_array>`

If 1D, converts this tensor to a PackedFloat64Array.

If the backing array is PackedFloat64Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int32_array:

.. rst-class:: classref-method

``PackedInt32Array`` **to_packed_int32_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_int32_array>`

If 1D, converts this tensor to a PackedInt32Array.

If the backing array is PackedInt32Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int64_array:

.. rst-class:: classref-method

``PackedInt64Array`` **to_packed_int64_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_int64_array>`

If 1D, converts this tensor to a PackedInt64Array.

If the backing array is PackedInt64Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_vector2_array:

.. rst-class:: classref-method

``PackedVector2Array`` **to_packed_vector2_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_vector2_array>`

If shape is \[?, 2\], converts this tensor to a PackedVector2Array.

If the backing array is PackedVector2Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_vector3_array:

.. rst-class:: classref-method

``PackedVector3Array`` **to_packed_vector3_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_vector3_array>`

If shape is \[?, 3\], converts this tensor to a PackedVector3Array.

If the backing array is PackedVector3Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_vector4_array:

.. rst-class:: classref-method

``PackedVector4Array`` **to_packed_vector4_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_vector4_array>`

If shape is \[?, 4\], converts this tensor to a PackedVector4Array.

If the backing array is PackedVector4Array, it will produce an instantaneous copy-on-write copy.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_plane:

.. rst-class:: classref-method

``Plane`` **to_plane**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_plane>`

If shape is \[4\], converts this tensor to a Plane.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_projection:

.. rst-class:: classref-method

``Projection`` **to_projection**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_projection>`

If shape is \[4, 4\], converts this tensor to a Projection.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_quaternion:

.. rst-class:: classref-method

``Quaternion`` **to_quaternion**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_quaternion>`

If shape is \[4\], converts this tensor to a Quaternion.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector2:

.. rst-class:: classref-method

``Vector2`` **to_vector2**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector2>`

If shape is \[2\], converts this tensor to a Vector2.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector2i:

.. rst-class:: classref-method

``Vector2i`` **to_vector2i**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector2i>`

If shape is \[2\], converts this tensor to a Vector2i.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector3:

.. rst-class:: classref-method

``Vector3`` **to_vector3**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector3>`

If shape is \[3\], converts this tensor to a Vector3.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector3i:

.. rst-class:: classref-method

``Vector3i`` **to_vector3i**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector3i>`

If shape is \[3\], converts this tensor to a Vector3i.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector4:

.. rst-class:: classref-method

``Vector4`` **to_vector4**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector4>`

If shape is \[4\], converts this tensor to a Vector4.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_vector4i:

.. rst-class:: classref-method

``Vector4i`` **to_vector4i**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_vector4i>`

If shape is \[4\], converts this tensor to a Vector4.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_transpose:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **transpose**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_transpose>`

Returns a view of the array with axes transposed.

Refer to :ref:`nd.transpose<class_nd_method_transpose>` for full documentation.

Axes can be passed without creating an array, e.g. ``array.transpose(3, 1, 2)``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
